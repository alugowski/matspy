name: tests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Tests on ${{ matrix.os }} - ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.11', 'pypy-3.9']

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install base dependencies
      run: pip install numpy matplotlib pytest pytest-subtests html5lib

    - name: Test minimums
      run: pytest

    - name: Install optional dependencies
      # --only-binary disables compiling the package from source if a binary wheel is not available, such as old Python or PyPy
      run: |
        echo ""
        echo "=== Install SciPy ============================="
        pip install --only-binary ":all:" scipy || true
        echo ""
        echo "=== Install python-graphblas =================="
        pip install --only-binary ":all:" python-graphblas || true
        echo ""
        echo "=== Install PyData/Sparse ====================="
        pip install --only-binary ":all:" sparse || true

    - name: Test without Jupyter
      run: pytest

    - name: Install Jupyter
      if: ${{ !contains(matrix.python-version, 'pypy') }}
      run: pip install jupyter

    - name: Test with Jupyter
      if: ${{ !contains(matrix.python-version, 'pypy') }}
      run: pytest

    - name: Test with Coverage
      if: ${{ contains(matrix.os, 'ubuntu') }}
      run: |
        pip install pytest-cov
        pytest --cov=matspy --cov-report term --cov-report=xml

    - name: Upload Coverage to Codecov
      if: ${{ contains(matrix.os, 'ubuntu') }}
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
